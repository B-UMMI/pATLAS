// function to get all node positions and write then to a file
const getPositions = (g, layout) => {
  masterJSON = {
    "nodes": [],
  }
  g.forEachNode( (node) => {
    const position = layout.getNodePosition(node.id)
    // push an individual json object for each link
    //console.log(node.links)
    const links = node.links.map( (link) => {
      //console.log(node.id, link.fromId, link.toId)
      const linkData = (link.fromId === node.id) ? link.toId : (link.toId === node.id) ? link.fromId: null
      return linkData
    })
    // remove duplicate entries generated by
    //const linksNoDuplicates = links.filter( () => {

   // })
    //console.log(node.id, links)//, linksNoDuplicates)
    masterJSON.nodes.push({
      "id": node.id,
      "length": node.data.seq_length.split(">").slice(-1).toString(),
      "nodePosition": position,
      "links": {
      //  "fromId"
      }
    })
  })
}

//*********************//
//    DEVEL SESSION    //
//*********************//

// devel session to get positions of each node
const initCallback = (g, layout, devel) => {
  if (devel === true || layout !== false) {
    console.log("devel on")
    getPositions(g, layout)
  } else {
    console.log("devel off")
  }
}